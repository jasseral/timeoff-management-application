---
- name: Create key folder
  connection: local
  changed_when: true
  command:
    cmd: "mkdir -p /home/runner/.ssh/"
  ignore_errors: true
  
- name: Creating private key
  connection: local
  copy:
    dest: "{{ ANSIBLE_SSH_PRIVATE_KEY_DEST }}"
    content: |
      {{ ANSIBLE_SSH_PRIVATE_KEY_FILE }}

- name: change permisions 
  connection: local
  changed_when: true
  command:
    cmd: "chmod 400 /home/runner/.ssh/id_rsa"

- name: Update  apt packages on {{ target }} remote machine
  apt:
    update_cache: yes
  
# - name: Install docker.io on {{ target }} remote machine
#   apt:
#     name: docker.io
#     state: present

# - name: Install python3-pip on {{ target }} remote machine
#   apt:
#     name: python3-pip
#     state: present

# - name: Install docker python support on {{ target }} remote machine
#   pip:
#     name: docker

# - name: Get docker environments for injection (local connection)
#   connection: local
#   changed_when: true
#   command:
#     cmd: "node deploy/docker_env.js"
#     chdir: "../.."
#   environment:
#     DOCKER_REGISTRY_PATH: "{{ DOCKER_REGISTRY_PATH }}"
#   register: docker_image_env
#   #ignore_errors: true

# - name: Log into {{ DOCKER_REGISTRY }}
#   community.docker.docker_login:
#     registry_url: "{{ DOCKER_REGISTRY }}"
#     username: "{{ DOCKER_USER }}"
#     password: "{{ DOCKER_PASS }}"

# - name: Recreate container on {{ target }} remote machine
#   community.docker.docker_container:
#     name: "{{ APP_NAME }}"
#     image: "{{ docker_image_env.stdout | trim }}"
#     pull: true
#     state: started
#     recreate: yes
#     ports:
#      - "3000:3000"
#   register: docker_container_output

# # - name: Show container output
# #   debug:
# #     msg: "{{ docker_container_output.container.Output }}"
